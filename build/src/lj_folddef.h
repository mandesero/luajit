/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_numabsneg,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_fpcall1,
  fold_kfold_fpcall2,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufput_append,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_k,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_simplify_andor_k,
  fold_simplify_andor_k64,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_dup_minmax,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_dup_minmax,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_tab_len,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_fold_base,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  fold_prof,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[1010] = {
0xffffffff,
0x9379ffff,
0xffffffff,
0x3c55fc2f,
0x63508417,
0xffffffff,
0x908a6bff,
0xffffffff,
0x614877ff,
0x7567ffff,
0x31b86000,
0xffffffff,
0x49b2a675,
0xffffffff,
0xffffffff,
0x5655ffff,
0xffffffff,
0xffffffff,
0x113e7400,
0xffffffff,
0xffffffff,
0x0f5a741d,
0x7443ffff,
0xffffffff,
0xffffffff,
0x1fbf880e,
0x0066701c,
0xffffffff,
0x7d7a63ff,
0x81893c08,
0xffffffff,
0x604dfc21,
0xffffffff,
0x0054701c,
0xffffffff,
0x5155fc1d,
0x3d57fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5c43fc1d,
0x27b25eb4,
0x730dffff,
0xffffffff,
0xffffffff,
0x6a66cfff,
0x5f4ffc17,
0x3312741d,
0x26b25e71,
0xffffffff,
0xffffffff,
0x624e5fff,
0xffffffff,
0xffffffff,
0x1300741d,
0xffffffff,
0xffffffff,
0x87893400,
0xffffffff,
0x070c701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x3311fc1b,
0xffffffff,
0xffffffff,
0x8b89440e,
0xffffffff,
0xffffffff,
0xffffffff,
0x3f58bc2f,
0x096c5c17,
0xffffffff,
0x46b5641c,
0xffffffff,
0x1fbf880b,
0xffffffff,
0x085a5c17,
0x44b36676,
0xffffffff,
0x3211101b,
0xffffffff,
0xffffffff,
0xffffffff,
0x08485c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x64429417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x93adfc00,
0x27b25ed3,
0xffffffff,
0xffffffff,
0x6642881d,
0x9693ffff,
0xffffffff,
0xffffffff,
0x33125c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d89fc00,
0x0c005c17,
0xffffffff,
0xffffffff,
0x625077ff,
0x716fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5955fc2a,
0x5854abff,
0xffffffff,
0x2bb2726e,
0x4bb2aaae,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x44b36695,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x065c701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6756ac17,
0xffffffff,
0xffffffff,
0x104a7417,
0x8d89fc10,
0x7015ffff,
0x3468d002,
0xffffffff,
0x2253fc19,
0xffffffff,
0x5257fc17,
0x7f753fff,
0x7303ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5d45fc17,
0x1308741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c50a017,
0xffffffff,
0xffffffff,
0x8a886011,
0x0702701c,
0x80754018,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08505c17,
0xffffffff,
0xffffffff,
0x9abfffff,
0x6c4a9417,
0xffffffff,
0x47696400,
0x9211fc0d,
0x694287ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x64429017,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d89fc04,
0x8e89ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c085c17,
0x6842841d,
0x67448817,
0x9a77ffff,
0xffffffff,
0x3953fc2f,
0x634e8417,
0xffffffff,
0xffffffff,
0xffffffff,
0x7565ffff,
0xffffffff,
0x1ebf8816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7153ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5754a7ff,
0x0f58741d,
0x4bb2a6ae,
0xffffffff,
0xffffffff,
0xffffffff,
0x0064701c,
0x1fbf880d,
0x0e46741d,
0x7d7863ff,
0xffffffff,
0x604bfc21,
0xffffffff,
0x0052701c,
0x45b365ae,
0x5053fc1d,
0x3a55fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x730bffff,
0x27b25eb3,
0x33126fff,
0xffffffff,
0x2152681d,
0x5f4dfc17,
0x3310741d,
0x2ab27695,
0x26b25e70,
0xffffffff,
0x624c5fff,
0x8c894811,
0xffffffff,
0x187f37ff,
0xffffffff,
0x8075401c,
0xffffffff,
0xffffffff,
0x070a701c,
0xffffffff,
0x140bfc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3f56bc2f,
0x096a5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1fbf880a,
0xffffffff,
0xffffffff,
0x44b36675,
0xffffffff,
0xffffffff,
0x84894009,
0xffffffff,
0x08465c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9aa3ffff,
0xffffffff,
0x8589fc08,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9691ffff,
0xffffffff,
0x3e58bc1c,
0xffffffff,
0x33105c17,
0x23b4701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7b87fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0x624e77ff,
0x566dffff,
0xffffffff,
0x65448417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5a55fc29,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3560c044,
0xffffffff,
0x1aa94c55,
0xffffffff,
0xffffffff,
0x86886000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x405dfc1c,
0xffffffff,
0x43b366ce,
0xffffffff,
0xffffffff,
0x10487417,
0x8d89fc0f,
0x7213ffff,
0xffffffff,
0x3468d001,
0xffffffff,
0x2253fc18,
0x4e55fc17,
0xffffffff,
0x7301ffff,
0xffffffff,
0x49b2ae96,
0x4f545fff,
0xffffffff,
0x5c43fc17,
0x1306741d,
0xffffffff,
0x2152641d,
0x6a64cbff,
0xffffffff,
0x0712701c,
0xffffffff,
0x88896c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0700701c,
0x8a886010,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6d66cc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x375ebfff,
0xffffffff,
0x084e5c17,
0x04ba73ff,
0xffffffff,
0x9abdffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x82893c09,
0x1cabffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x29b275d6,
0x9999ffff,
0xffffffff,
0xffffffff,
0x9aa1fc00,
0xffffffff,
0x37408000,
0x2ab27675,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c065c17,
0xffffffff,
0x65428817,
0x8575ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x30b65fff,
0x1dbf8815,
0xffffffff,
0x77133418,
0x4bb2aa6e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e56741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0062701c,
0x1fbf880c,
0x0e44741d,
0xffffffff,
0x3660bc44,
0x6049fc21,
0xffffffff,
0xffffffff,
0x10507417,
0x4d6ffc17,
0xffffffff,
0x6e15fc29,
0xffffffff,
0xffffffff,
0x6852a41d,
0xffffffff,
0xffffffff,
0x7309ffff,
0x33106fff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f4bfc17,
0x130e741d,
0xffffffff,
0x26b25e6f,
0xffffffff,
0x614a5fff,
0xffffffff,
0x8c894810,
0x49b2aa96,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0708701c,
0x2052601d,
0x0b405c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c4e9c17,
0x6f15fc17,
0xffffffff,
0xffffffff,
0x6b468fff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08565c17,
0x1dbf8809,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08445c17,
0xffffffff,
0xffffffff,
0x4ab3ffff,
0xffffffff,
0x43b366ae,
0x68468c1d,
0xffffffff,
0x6c489017,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8589fc07,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d8fffff,
0xffffffff,
0x3e56bc1c,
0x49b2ae76,
0x0c0e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7a85fc00,
0x036873ff,
0xffffffff,
0xffffffff,
0x624c77ff,
0x716bffff,
0xffffffff,
0x67428417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x79846800,
0xffffffff,
0xffffffff,
0x925437ff,
0x169bfc17,
0x5b54a429,
0x7647ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4bb2a66e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6051fc21,
0x159a6817,
0x0058701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x02627017,
0xffffffff,
0x25b25dd4,
0xffffffff,
0x5e47fc1d,
0x7211ffff,
0x8d89fc0e,
0xffffffff,
0x3468d000,
0xffffffff,
0x4c53fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b2ae95,
0xffffffff,
0xffffffff,
0x1304741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x21526817,
0x0710701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x9255fc0d,
0xffffffff,
0x49b2a696,
0xffffffff,
0x8a88600f,
0x2eb272ce,
0x80754016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0d0bfc17,
0xffffffff,
0xffffffff,
0x085e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x084c5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1ba9ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9897ffff,
0x28b275d5,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4bb4a81c,
0xffffffff,
0xffffffff,
0x0c045c17,
0xffffffff,
0x49b2aa76,
0x4f5477ff,
0x7e73ffff,
0xffffffff,
0x634a8417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1dbf8814,
0xffffffff,
0x77113418,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x94ad4000,
0xffffffff,
0x0e54741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e42741d,
0x952bffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x104e7417,
0x4c6dfc17,
0x42b3668e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x545bfc17,
0xffffffff,
0x7307ffff,
0xffffffff,
0xffffffff,
0x555a5fff,
0xffffffff,
0x5f49fc17,
0x8589fc09,
0x130c741d,
0xffffffff,
0xffffffff,
0x61485fff,
0xffffffff,
0xffffffff,
0x8c89480f,
0x49b2aa95,
0xffffffff,
0xffffffff,
0xffffffff,
0x0706701c,
0x48b3fed3,
0x0a3e5c00,
0x21526417,
0xffffffff,
0xffffffff,
0x01607044,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08665c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08545c17,
0xffffffff,
0xffffffff,
0x9ac3ffff,
0x47696402,
0x3852bfff,
0x6d64c817,
0x08425c17,
0xffffffff,
0x9ab00000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x33126018,
0x9a9fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8589fc06,
0xffffffff,
0xffffffff,
0x8f8dffff,
0xffffffff,
0x3b54bc1c,
0x49b2ae75,
0x0c0c5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x373e7c00,
0x7883fc00,
0xffffffff,
0x4bb4a41c,
0xffffffff,
0x614a77ff,
0xffffffff,
0xffffffff,
0x49b2a676,
0xffffffff,
0xffffffff,
0x2db272ae,
0x7157ffff,
0xffffffff,
0xffffffff,
0x12407400,
0xffffffff,
0xffffffff,
0x0f5c741d,
0x7445ffff,
0xffffffff,
0x1fbf880f,
0x6856ac1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x94ad3c00,
0x604ffc21,
0xffffffff,
0x0056701c,
0xffffffff,
0x5357fc1d,
0x3d59fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x24b25dd3,
0x5d45fc1d,
0x730fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f51fc17,
0x26b25e72,
0xffffffff,
0xffffffff,
0xffffffff,
0x62505fff,
0x6752a417,
0xffffffff,
0x1302741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x070e701c,
0xffffffff,
0x05bb8839,
0xffffffff,
0x3313fc1b,
0xffffffff,
0xffffffff,
0x49b2a695,
0xffffffff,
0x8988600e,
0xffffffff,
0x096e5c17,
0xffffffff,
0xffffffff,
0x20526017,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c4c9817,
0xffffffff,
0xffffffff,
0x3213101b,
0x69448bff,
0xffffffff,
0xffffffff,
0x084a5c17,
0x2fb673ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x42b3666e,
0x9aa7ffff,
0xffffffff,
0x27b25ed4,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6844881d,
0x9795ffff,
0x67468c17,
0xffffffff,
0x0c145c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d89fc01,
0xffffffff,
0x0c025c17,
0xffffffff,
0xffffffff,
0x49b2aa75,
0xffffffff,
0xffffffff,
0x63488417,
0x48b3feb3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1dbf8813,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x83894008,
0xffffffff,
0x44b36696,
0x0e52741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d89fc11,
0x104c7417,
0x4c6bfc17,
0x9a17ffff,
0xffffffff,
0x2253fc1a,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7305ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e47fc17,
0x130a741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x177e6017,
0xffffffff,
0xffffffff,
0x8b89480e,
0xffffffff,
0xffffffff,
0xffffffff,
0x0704701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x015e7044,
0x2cb2728e,
0xffffffff,
0xffffffff,
0xffffffff,
0x08645c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x41b365d3,
0xffffffff,
0x08525c17,
0xffffffff,
0xffffffff,
0x9ac1ffff,
0xffffffff,
0x47696401,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x93afffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x33106018,
0x19bb8800,
0x9a9dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7cbffc1e,
0xffffffff,
0x918bffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c0a5c17,
0x6644841d,
0xffffffff
};

#define fold_hashkey(k)	(((((k)<<20)-(k))<<3)%1009)

